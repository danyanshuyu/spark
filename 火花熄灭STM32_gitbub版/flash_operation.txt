; generated by ARM C/C++ Compiler, 4.1 [Build 567]
; commandline ArmCC [--list --debug -c --asm --interleave -oflash_operation.o --asm_dir=.\ --list_dir=.\ --depend=flash_operation.d --cpu=Cortex-M3 --apcs=interwork -O0 -I"E:\Program Files\Keil4\ARM\INC" -I"E:\Program Files\Keil4\ARM\INC\ST\STM32F10x" -D__MICROLIB --omf_browse=flash_operation.crf User\Flash_operation.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ReadFlashNByte PROC
;;;19     *******************************************************************************/
;;;20     void ReadFlashNByte(u32 ReadAddress,u32 *ReadBuf,u32 ReadNum)
000000  b510              PUSH     {r4,lr}
;;;21     {
;;;22     	int DataNum = 0;
000002  2300              MOVS     r3,#0
;;;23     
;;;24     	ReadAddress = (u32)STARTADDR + ReadAddress;
000004  4c14              LDR      r4,|L1.88|
000006  4420              ADD      r0,r0,r4
;;;25     	
;;;26     	while(DataNum<ReadNum)
000008  e004              B        |L1.20|
                  |L1.10|
;;;27     	{
;;;28     		*(ReadBuf+ReadNum) = *(u32 *)ReadAddress++;
00000a  f8504b01          LDR      r4,[r0],#1
00000e  f8414022          STR      r4,[r1,r2,LSL #2]
;;;29     		DataNum++;
000012  1c5b              ADDS     r3,r3,#1
                  |L1.20|
000014  4293              CMP      r3,r2                 ;26
000016  d3f8              BCC      |L1.10|
;;;30     	}		
;;;31     }
000018  bd10              POP      {r4,pc}
;;;32     
                          ENDP

                  WriteFlashOneWord PROC
;;;40     *******************************************************************************/
;;;41     void WriteFlashOneWord(u32 WriteAddress,u32 WriteData)
00001a  b570              PUSH     {r4-r6,lr}
;;;42     {
00001c  4604              MOV      r4,r0
00001e  460d              MOV      r5,r1
;;;43     	FLASH_Unlock();
000020  f7fffffe          BL       FLASH_Unlock
;;;44     	
;;;45     	FLASH_ClearFlag(FLASH_FLAG_BSY|FLASH_FLAG_EOP|FLASH_FLAG_PGERR|FLASH_FLAG_WRPRTERR);
000024  2035              MOVS     r0,#0x35
000026  f7fffffe          BL       FLASH_ClearFlag
;;;46     	
;;;47     	FLASHStatus = FLASH_ErasePage(STARTADDR);//擦除指定地址页    FLASH_EraseAllPages();
00002a  480b              LDR      r0,|L1.88|
00002c  f7fffffe          BL       FLASH_ErasePage
000030  490a              LDR      r1,|L1.92|
000032  7008              STRB     r0,[r1,#0]
;;;48     
;;;49     	if(FLASHStatus == FLASH_COMPLETE)
000034  4608              MOV      r0,r1
000036  7800              LDRB     r0,[r0,#0]  ; FLASHStatus
000038  2804              CMP      r0,#4
00003a  d106              BNE      |L1.74|
;;;50     	{
;;;51     		FLASHStatus = FLASH_ProgramWord(STARTADDR + WriteAddress, WriteData); 	
00003c  4906              LDR      r1,|L1.88|
00003e  1860              ADDS     r0,r4,r1
000040  4629              MOV      r1,r5
000042  f7fffffe          BL       FLASH_ProgramWord
000046  4905              LDR      r1,|L1.92|
000048  7008              STRB     r0,[r1,#0]
                  |L1.74|
;;;52     	}
;;;53     
;;;54         FLASH_ClearFlag(FLASH_FLAG_BSY|FLASH_FLAG_EOP|FLASH_FLAG_PGERR|FLASH_FLAG_WRPRTERR);//清除标志位
00004a  2035              MOVS     r0,#0x35
00004c  f7fffffe          BL       FLASH_ClearFlag
;;;55     
;;;56     	FLASH_Lock();
000050  f7fffffe          BL       FLASH_Lock
;;;57     }
000054  bd70              POP      {r4-r6,pc}
;;;58     
                          ENDP

000056  0000              DCW      0x0000
                  |L1.88|
                          DCD      0x0807f800
                  |L1.92|
                          DCD      FLASHStatus

                          AREA ||.data||, DATA, ALIGN=0

                  FLASHStatus
000000  04                DCB      0x04
